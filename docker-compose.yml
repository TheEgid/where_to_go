services:

  database1:
    image: postgis/postgis:latest
    restart: on-failure
    volumes:
      - database1_volume:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: database1
    networks:
      - database1_network

  # web container, with django + gunicorn
  djangoapp:
    build: .
    restart: on-failure
    environment:
      - DJANGO_SETTINGS_MODULE
    ports:
      - "8000:8000"
    volumes:
      - .:/opt/services/djangoapp
      - static:/opt/services/static
      - media:/opt/services/djangoapp/media
    networks:
      - database1_network
      - nginx_network
    depends_on:
      - database1

  # reverse proxy container (nginx)
  nginx:
    image: nginx:alpine
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static:/opt/services/static
      - media:/opt/services/djangoapp/media
    environment:
        - TZ=Europe/Moscow
    networks:
      - database1_network
      - nginx_network
    depends_on:
      - djangoapp

networks:
  database1_network:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  database1_volume:
  static:
  media:
